name: Build Vitruvian ISO

on: [push]

jobs:
  iso-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            bison build-essential cmake debootstrap debhelper \
            dh-dkms dkms elfutils flex git \
            grub-efi-amd64-bin grub-pc-bin \
            mtools ninja-build squashfs-tools sudo xorriso zlib1g-dev \
            fakeroot devscripts lintian wget

      - name: Configure git safe.directory
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Build buildtools
        run: |
          mkdir buildtools
          cd buildtools
          cmake -DBUILDTOOLS_MODE=1 .. -GNinja
          ninja

      - name: Create build directory
        run: mkdir -p generated.x86

      - name: Init submodules
        run: git submodule update --init --recursive

      - name: Setup environment (bootstrap Trixie chroot)
        run: cd generated.x86 && export TERM=xterm-256color && ../build/scripts/setupenv.sh

      - name: Configure with chroot sysroot
        run: |
          cd generated.x86
          CHROOT="$GITHUB_WORKSPACE/generated.x86/LIVE_BOOT/chroot"

          ../configure \
            -DCMAKE_SYSROOT=$CHROOT \
            -DCMAKE_FIND_ROOT_PATH=$CHROOT \
            -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY \
            -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY \
            -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \
            -DPKG_CONFIG_LIBDIR=$CHROOT/usr/lib/pkgconfig:$CHROOT/usr/share/pkgconfig \
            -DPKG_CONFIG_SYSROOT_DIR=$CHROOT \
            -DCMAKE_INSTALL_RPATH=/usr/lib \
            -DCMAKE_BUILD_WITH_INSTALL_RPATH=TRUE

      - name: Ninja build (generate all targets including nexus-dkms)
        run: cd generated.x86 && ninja

      - name: Generate VOS DEB package (from CPack)
        run: cd generated.x86 && cpack

      - name: Make mkiso script executable
        run: chmod +x ./build/scripts/mkiso.sh

      - name: Run mkiso script
        run: cd generated.x86 && ../build/scripts/mkiso.sh

      - name: Generate ISO checksum
        run: |
          cd generated.x86/LIVE_BOOT
          for iso in *.iso; do
            sha256sum "$iso" > "$iso.sha256"
          done

      - name: Upload Vitruvian ISO
        uses: actions/upload-artifact@v4
        with:
          name: Vitruvian-ISO
          path: |
            generated.x86/LIVE_BOOT/*.iso
            generated.x86/LIVE_BOOT/*.sha256

      - name: Generate DEB checksums
        run: |
          cd generated.x86
          for deb in *.deb; do
            sha256sum "$deb" > "$deb.sha256"
          done

      - name: Upload Vitruvian DEB packages
        uses: actions/upload-artifact@v4
        with:
          name: Vitruvian-DEB
          path: |
            generated.x86/*.deb
            generated.x86/*.sha256
